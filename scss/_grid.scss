// ============================================================
// For browsers that supports grid engage the thrusters
// ============================================================

$num-cols: 12;

@supports(display: grid) {


	// ================================
	// Convert the markup to css grid
	// ================================
	.grid-container {
		max-width: $global-width;
		margin-left: auto;
		margin-right: auto;
		padding: 0 $global-padding;
	}

	// make grid-x display: grid
	.grid-x {
		display: grid;
		grid-template-columns: repeat(12, 1fr);
		grid-gap: $global-margin;
		width: 100%;

		&:after {
			content: none;
		}
	}

	// cells need to be full width unless specified by a small-, medium, large- rule
	.cell {
		grid-column: span 12;
	}

	// make sure cells take up the full width
	.grid-x .cell {
		width: 100%;
		max-width: 100%;
		padding: 0;
	}
	
	// override the negative margins applied by the flex grid
	.grid-padding-x .grid-padding-x, 
	.grid-container:not(.full) > .grid-padding-x {
		margin: 0 auto;
	}


	// ================================
	// mixin for generating the cells
	// ================================
	@mixin grid-columns-generator($class-name) {
		$i: 1;
		@while $i <= $num-cols {
		.#{$class-name}#{$i} {
			grid-column: span $i;
		}
	
		$i: $i + 1;
		}
	}

	@include grid-columns-generator("small-");

	@include breakpoint(medium) {
		@include grid-columns-generator("medium-");
	}

	@include breakpoint(large) {
		@include grid-columns-generator("large-");
	}

}//@supports grid